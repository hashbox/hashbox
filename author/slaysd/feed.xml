<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>/</title>
   
   <link>/</link>
   <description>The professional publishing platform</description>
   <language>ko-kr</language>
   
      
            
      
   
   <title>
   <![CDATA[ HASHBOX ]]>
   </title>
   <description>
   <![CDATA[ The professional publishing platform ]]>
   </description>
   <link>/</link>
   <image>
   <url>/assets/images/favicon.png</url>
   <title>HASHBOX</title>
   <link>/</link>
   </image>
   <generator>Jekyll 3.6.2</generator>
   <lastBuildDate></lastBuildDate>
   <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
   <ttl>60</ttl>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>CentOS7 + Apache + Tomcat8 연동(mod_jk)</title>
	  <link>/Apache-Tomcat-%EC%97%B0%EB%8F%99</link>
		
				
		
	  <pubDate>2017-06-24T10:18:00+00:00</pubDate>
	  <guid>/Apache-Tomcat-%EC%97%B0%EB%8F%99</guid>
	  <description><![CDATA[
	     <p></p>

<h1 id="개요">개요</h1>

<p>이번에는 CentOS7 환경에서 아파치 <code class="highlighter-rouge">httpd</code>와 <code class="highlighter-rouge">tomcat8</code>을 연동하는 방법에 대해서 알아보도록 하겠습니다. 평소 웹 환경을 구축해야하는 경우가 많은데 매번 할 때마다 까먹고 찾고 하는 시간이 너무 오래 걸리는 것같아 이번에 다시 환경을 만들면서 설치 순서를 기록으로 남겼습니다. 기본적인 환경 구축만을 목표로 하기 때문에 간단하고 추가되는 설정은 없습니다. 환경을 구축하고 난 뒤에 필요하신 옵션을 추가해서 사용하세요~! 지금 부터 알아보도록 하겠습니다.</p>

<p><br /></p>

<hr />

<p><br /></p>

<h2 id="환경을-구축하기-위한-패키지-및-apache-httpd-설치">환경을 구축하기 위한 패키지 및 Apache Httpd 설치</h2>

<p>우선 환경을 구축하기 위해서 필요로 하는 패키지를 한번에 설치하도록 하겠습니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum install <span class="nt">-y</span> gcc gcc-c++ httpd-devel java-1.8.0-openjdk-devel.x86_64 wget libtool make
</code></pre></div></div>

<p>기본적으로 <code class="highlighter-rouge">libtool</code>, <code class="highlighter-rouge">gcc</code>환경과 <code class="highlighter-rouge">java jdk</code>가 설치 되어 있어야하며, <code class="highlighter-rouge">wget</code>이나 <code class="highlighter-rouge">make</code>는 설치가 안되 있으신 분들은 위해 넣었습니다. 이와 함께 제일 설치하기 쉬운 아파치 설치는 <code class="highlighter-rouge">httpd-devel</code>을 통해서 설치가 가능합니다. 위 명령어를 이용하면 환경을 구축하는데 있어 필요로하는 패키지들과 <code class="highlighter-rouge">apache</code>가 설치가 완료 하셨습니다.</p>

<p><br /></p>

<h2 id="tomcat8-설치">Tomcat8 설치</h2>

<p>저는 <code class="highlighter-rouge">tomcat8</code>을 설치 하게 되었는데요. 이는 http://tomcat.apache.org/download-80.cgi에 들어가시면 최신버전의 톰캣 <code class="highlighter-rouge">tar.gz</code>압축 파일을 받으실 수 있습니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget http://mirror.navercorp.com/apache/tomcat/tomcat-8/v8.5.23/bin/apache-tomcat-8.5.23.tar.gz
<span class="nb">tar </span>zxvf apache-tomcat-8.5.23.tar.gz
mv apache-tomcat-8.5.23.tar.gz /opt/tomcat
</code></pre></div></div>

<p>위와 같은 명령어를 통해서 현재 폴더에 톰캣 압축파일을 받아옵니다.  그 후 <code class="highlighter-rouge">tar</code>명령어를 통해 압축을 풀어주고 난 뒤에 해당 폴더를 그대로 <code class="highlighter-rouge">/opt/tomcat</code>으로 이동을 시켜줍니다.</p>

<p><br /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>groupadd tomcat
<span class="nb">sudo </span>useradd <span class="nt">-M</span> <span class="nt">-s</span> /bin/nologin <span class="nt">-g</span> tomcat <span class="nt">-d</span> /opt/tomcat tomcat
<span class="nb">sudo </span>chown <span class="nt">-R</span> tomcat:tomcat /opt/tomcat
</code></pre></div></div>

<p>그 후 톰캣을 사용하는 유저를 지정해주셔야합니다. <code class="highlighter-rouge">tomcat</code>그룹과 <code class="highlighter-rouge">tomcat</code>유저를 생성하면서 구동파일들을 옮겨놨던 <code class="highlighter-rouge">/opt/tomcat</code>을 지정해주고, 해당 폴더의 소유자를 <code class="highlighter-rouge">tomcat</code>으로 변경해주시면 됩니다.</p>

<p><br /></p>

<p>그 다음에는 톰캣을 서비스에서 등록하고 서버가 부팅될 때 바로 켜지도록 설정을 할 것입니다. 수동으로 켜고 끄시는 것만 하실 경우에는 서비스만 등록하시고 <code class="highlighter-rouge">chkconfig</code> 명령어만 입력 안하셔도 괜찮습니다.</p>

<h3 id="tomcat-서비스-파일-생성">Tomcat 서비스 파일 생성</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vim /etc/systemd/system/tomcat.service
</code></pre></div></div>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span>Unit<span class="p">]</span>
Description<span class="p">=</span>Apache Tomcat Web Application Container
After<span class="p">=</span>syslog<span class="p">.</span>target network<span class="p">.</span>target

<span class="p">[</span>Service<span class="p">]</span>
Type<span class="p">=</span>forking

Environment<span class="p">=</span>JAVA_HOME<span class="p">=</span><span class="sr">/usr/</span>lib<span class="sr">/jvm/</span>java<span class="m">-1</span><span class="p">.</span><span class="m">8</span><span class="p">.</span><span class="m">0</span><span class="p">-</span>openjdk<span class="m">-1</span><span class="p">.</span><span class="m">8</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">151-1</span><span class="p">.</span>b12<span class="p">.</span>el7_4<span class="p">.</span>x86_64
Environment<span class="p">=</span>CATALINA_PID<span class="p">=</span><span class="sr">/opt/</span>tomcat<span class="sr">/temp/</span>tomcat<span class="p">.</span>pid
Environment<span class="p">=</span>CATALINA_HOME<span class="p">=</span><span class="sr">/opt/</span>tomcat
Environment<span class="p">=</span>CATALINA_BASE<span class="p">=</span><span class="sr">/opt/</span>tomcat
Environment<span class="p">=</span><span class="s1">'CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'</span>
Environment<span class="p">=</span><span class="s1">'JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'</span>

ExecStart<span class="p">=</span><span class="sr">/opt/</span>tomcat<span class="sr">/bin/</span>startup<span class="p">.</span><span class="k">sh</span>
ExecStop<span class="p">=</span><span class="sr">/bin/</span>kill <span class="m">-15</span> $MAINPID

<span class="nb">User</span><span class="p">=</span>tomcat
Group<span class="p">=</span>tomcat
UMask<span class="p">=</span><span class="m">0007</span>
RestartSec<span class="p">=</span><span class="m">10</span>
Restart<span class="p">=</span>always

<span class="p">[</span>Install<span class="p">]</span>
WantedBy<span class="p">=</span>multi<span class="p">-</span>user<span class="p">.</span>target
</code></pre></div></div>

<p><code class="highlighter-rouge">JAVA_HOME</code>과 같은 경우에는 혹시나 다를까 싶어 해당하는 경로를 가져오는 방법까지 첨부합니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>which javac
readlink <span class="nt">-f</span> <span class="o">{</span>which javac로 나온 경로를 입력<span class="o">}</span>
</code></pre></div></div>

<p>위와 같은 명령어로 <code class="highlighter-rouge">java</code>가 불려지는 파일 링크의 절대경로를 읽어 올 수 있습니다. 명령어로 얻은 주소에서 <code class="highlighter-rouge">bin</code>경로 전까지의 경로를 <code class="highlighter-rouge">JAVA_HOME</code>에 입력하시면됩니다.</p>

<h3 id="tomcat-서버-부팅시-자동시작">Tomcat 서버 부팅시 자동시작</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chkconfig tomcat on
</code></pre></div></div>

<p><code class="highlighter-rouge">chkconfig</code>를 통해서 <code class="highlighter-rouge">tomcat</code>서비스가 자동으로 시작되도록 추가해주시면 됩니다.</p>

<p><br /></p>

<h2 id="apache-httpd와-tomcat-연동mod_jk">Apache Httpd와 Tomcat 연동(mod_jk)</h2>

<p><code class="highlighter-rouge">Apache</code>와 <code class="highlighter-rouge">tomcat</code>을 연동하기 위해서는 모듈이 필요한데요. 가장 많이 사용하는 <code class="highlighter-rouge">mod_jk</code>를 이용해서 연동해보도록 하겠습니다. 우선 <code class="highlighter-rouge">mod_jk</code>를 설치파일을 다운 받아야합니다. 파일은 http://tomcat.apache.org/download-connectors.cgi에서 다운로드 받으실 수 있습니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget http://apache.mirror.cdnetworks.com/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.42-src.tar.gz
<span class="nb">tar </span>zxvf tomcat-connectors-1.2.42-src.tar.gz
<span class="nb">cd </span>tomcat-connectors-1.2.42-src/native/
</code></pre></div></div>

<p>다운로드를 받으신 후 압축을 푸신다음에 해당 폴더에 <code class="highlighter-rouge">native</code>폴더로 들어가셔서 설치를 하셔야 합니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./buildconf.sh
./configure <span class="nt">--with-apxs</span><span class="o">=</span>/usr/bin/apxs
make
make install
</code></pre></div></div>

<p>위와 같은 순서대로 설치를 진행해주세요. 혹시나 다른 리눅스 환경에서 설치를 하시는 경우에는 <code class="highlighter-rouge">--with-apxs</code>의 폴더 위치가 다를 수 있습니다. 다른 환경에서 진행 시 <code class="highlighter-rouge">apxs</code>를 찾지 못하는 오류가 있으실 경우에는 리눅스 환경에 맞는 경로를 따로 찾으셔서 적용해주세요. CentOS의 경우에는 위 명령어대로 설치하시면 문제 없이 설치가 완료를 할 수 있습니다.</p>

<p><br /></p>

<h3 id="연동-설정">연동 설정</h3>

<p>설치를 모두 완료 하셨으니 인제 <code class="highlighter-rouge">httpd</code>와 <code class="highlighter-rouge">tomcat</code>간 설정을 해주셔야합니다. 우선 아파치 설정을 잡을 것입니다. CentOS를 사용하시는 경우 아파치 관련 폴더인  <code class="highlighter-rouge">/etc/httpd/</code>에서 폴더 구조가 <code class="highlighter-rouge">conf</code>, <code class="highlighter-rouge">conf.d</code>, <code class="highlighter-rouge">conf.modules.d</code>와 같이 나뉘어져 있습니다. <code class="highlighter-rouge">conf</code>는 아파치의 설정파일만 존재하도록 구성되어있고 추가적인 모듈별 설정 같은 것을 <code class="highlighter-rouge">conf.d</code>에 생성하셔서 사용하시면 자동으로 불러와 적용되어집니다. <code class="highlighter-rouge">conf.modules.d</code>와 같은 경우에는 사용할 모듈을 불러오는 설정만 적용하는 파일들을 관리하는 폴더입니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /etc/httpd/conf.modules.d/
vim 00-jk.conf
</code></pre></div></div>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>LoadModule jk_module modules/mod_jk<span class="p">.</span><span class="k">so</span>
</code></pre></div></div>

<p>우선 <code class="highlighter-rouge">conf.module.d</code>폴더에 <code class="highlighter-rouge">mod_jk</code>관련 모듈을 불러오기 위해 <code class="highlighter-rouge">00-jk.conf</code>파일을 생성하고 <code class="highlighter-rouge">LoadModule ~~</code>을 입력하고 저장해주세요. 이는 방금전 설치한 <code class="highlighter-rouge">mod_jk</code>모듈을 불러와 <code class="highlighter-rouge">jk_module</code>이라는 이름으로 명명하는 구문입니다.</p>

<p><br /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /etc/httpd/conf.d/
vim httpd-jk.conf
</code></pre></div></div>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span>IfModule jk_module<span class="p">&gt;</span>

    # We need <span class="k">a</span> workers <span class="k">file</span> exactly once
    # and <span class="k">in</span> the global server
    JkWorkersFile <span class="k">conf</span><span class="p">.</span><span class="k">d</span>/workers<span class="p">.</span>properties

    JkLogStampFormat <span class="s2">"[%a %b %d %H:%M:%S %Y] "</span>
    # Our JK error log
    # You can <span class="p">(</span>and should<span class="p">)</span> use rotatelogs here
    JkLogFile logs/mod_jk<span class="p">.</span>log

    # Our JK log level <span class="p">(</span>trace<span class="p">,</span><span class="k">debug</span><span class="p">,</span>info<span class="p">,</span>warn<span class="p">,</span>error<span class="p">)</span>
    JkLogLevel info

    # Our JK shared memory <span class="k">file</span>
    JkShmFile logs/mod_jk<span class="p">.</span>shm

    # If you want <span class="k">to</span> <span class="k">put</span> <span class="k">all</span> mounts into an external <span class="k">file</span>
    # that gets reloaded automatically after <span class="k">changes</span>
    # <span class="p">(</span>with <span class="k">a</span> default latency of <span class="m">1</span> minute<span class="p">),</span>
    # you can define the name of the <span class="k">file</span> here<span class="p">.</span>
    JkMountFile <span class="k">conf</span><span class="p">.</span><span class="k">d</span>/uriworkermap<span class="p">.</span>properties

<span class="p">&lt;</span>/IfModule<span class="p">&gt;</span>
</code></pre></div></div>

<p>그 후 불러온 모듈에 대한 설정을 진행해 줍니다. 주의해서 보셔야 할 것은 <code class="highlighter-rouge">JkWorkersFile</code>과 <code class="highlighter-rouge">JkMountFile</code>입니다. 전자는 톰캣 서버들을 각각 설정하는 역할을 해주며, 후자는 특정 패턴을 가지는 파일을 요청했을 때 서비스하고자 하는 톰캣 서버를 지정하는 역할을 합니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /etc/httpd/conf.d/
vim workers.properties
</code></pre></div></div>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>worker<span class="p">.</span>list<span class="p">=</span>instance1<span class="p">,</span>instance2<span class="p">,</span>instance3

worker<span class="p">.</span>instance1<span class="p">.</span>port<span class="p">=</span><span class="m">8109</span>
worker<span class="p">.</span>instance1<span class="p">.</span>host<span class="p">=</span>localhost
worker<span class="p">.</span>instance1<span class="p">.</span>type<span class="p">=</span>ajp13
worker<span class="p">.</span>instance1<span class="p">.</span>lbfactor<span class="p">=</span><span class="m">1</span>

worker<span class="p">.</span>instance2<span class="p">.</span>port<span class="p">=</span><span class="m">8209</span>
worker<span class="p">.</span>instance2<span class="p">.</span>host<span class="p">=</span>localhost
worker<span class="p">.</span>instance2<span class="p">.</span>type<span class="p">=</span>ajp13
worker<span class="p">.</span>instance2<span class="p">.</span>lbfactor<span class="p">=</span><span class="m">1</span>

worker<span class="p">.</span>instance3<span class="p">.</span>port<span class="p">=</span><span class="m">8309</span>
worker<span class="p">.</span>instance3<span class="p">.</span>host<span class="p">=</span>localhost
worker<span class="p">.</span>instance3<span class="p">.</span>type<span class="p">=</span>ajp13
worker<span class="p">.</span>instance3<span class="p">.</span>lbfactor<span class="p">=</span><span class="m">1</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">workers.properties</code>파일은 위와같이 톰캣서버가 3개일 경우 톰캣서버의 이름들을 설정하고 해당 서버에 대한 설정을 이루도록 되어있습니다. 구축하시려는 환경에 맞게 옵션을 설정해주시면 됩니다.</p>

<p><br /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vim uriworkermap.properties
</code></pre></div></div>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/*<span class="p">.</span>jsp<span class="p">=</span>instance1
/*<span class="p">.</span>png<span class="p">=</span>instance2
/*<span class="p">.</span>css<span class="p">=</span>instance3
</code></pre></div></div>

<p><code class="highlighter-rouge">uriworkermap.properties</code>에는 특정 파일에 대해서 어떤 톰캣서버가 서비스할 것인지 맵핑하실 수 있습니다. 해당하는 파일들을 따로 나누어 관리하는 이유는 톰캣이 기본 10분마다 다시불러와 적용하기 때문에 톰캣 설정 변경을 위해 서비스를 재시작하지 않으셔도 적용이 가능하다는 이점이있기 때문입니다.</p>

<p><br /></p>

<h2 id="서비스-재시작">서비스 재시작</h2>

<p>인제 모든 설정을 마무리했습니다. <code class="highlighter-rouge">httpd</code>서비스와 <code class="highlighter-rouge">tomcat</code>서비스를 재시작하셔서 설정된 내용들을 적용하시면 됩니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>service httpd restart
service tomcat restart
</code></pre></div></div>

<p><br /></p>

<h3 id="팁1-연동-설정이-정상적으로-적용이-되는지-확인하는-방법">팁1: 연동 설정이 정상적으로 적용이 되는지 확인하는 방법</h3>

<p>아파치 <code class="highlighter-rouge">httpd</code>에는 정상적으로 설정파일들이 정상적인 Syntax를 가지고 있는지 확인하는 명령어를 내장하고 있습니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apachectl configtest
</code></pre></div></div>

<h3 id="팁2-톰캣-인코딩설정">팁2: 톰캣 인코딩설정</h3>

<p>톰캣에서 한글을 사용할 때 인코딩 문제로 깨지는 문제가 발생하실 수 있기 때문에 인코딩을 설정을 하셔야 합니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vim /opt/tomcat/conf/server.xml
</code></pre></div></div>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span>생략<span class="p">)</span>
<span class="p">&lt;</span>Connector port<span class="p">=</span><span class="s2">"8009"</span> protocol<span class="p">=</span><span class="s2">"AJP/1.3"</span> redirectPort<span class="p">=</span><span class="s2">"8443"</span> URIEncoding<span class="p">=</span><span class="s2">"UTF-8"</span> /<span class="p">&gt;</span>
<span class="p">(</span>생략<span class="p">)</span>
</code></pre></div></div>

<p>위와 같이 AJP 커넥터에 <code class="highlighter-rouge">URIEncoding="UTF-8"</code>을 적용하시면 됩니다.</p>

<p><br /></p>

<hr />

<p><br /></p>

<h1 id="마치며">마치며</h1>

<p>매번 환경을 구축할 때마다 괜한 곳에서 헤매는 경우가 많아 제가 많이 사용하는 서버환경에서 구축하는 방법을 정리해보았습니다. 여러번 시도하면서 군더더기 없는 설치를 위해 여러번을 엎고 다시 기록했습니다. 많은 분들께서 도움이 되셨으면 좋겠습니다. 감사합니다!</p>

	  ]]></description>
	</item>


</channel>
</rss>
